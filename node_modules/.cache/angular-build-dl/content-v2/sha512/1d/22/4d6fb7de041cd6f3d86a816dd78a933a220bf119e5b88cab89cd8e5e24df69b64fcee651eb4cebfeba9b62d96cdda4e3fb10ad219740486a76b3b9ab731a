{"version":3,"sources":["./src/app/config/app-routes.constants.ts","./src/environments/environment.ts","./src/app/reducers/index.ts","./src/app/config/app.constants.ts","./src/app/store/features/features.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/strategies/preload-selected-modules.strategy.ts","./src/app/modules/shared/components/navbar/navbar.component.ts","./src/app/modules/shared/components/navbar/navbar.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["\n// File contains all the app constants\nexport const appRoutes = {\n  // App routes constants\n  // Define diary routes\n  diary: {\n    root: 'diary',\n    note: 'note',\n    history: 'history'\n  },\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {\n  ActionReducer,\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n  MetaReducer\n} from '@ngrx/store';\n\nimport { environment } from '../../environments/environment';\n\nimport { localStorageSync } from 'ngrx-store-localstorage';\n\nimport { features } from '../store/features/features';\n\nexport interface State {}\n\nexport const reducers: ActionReducerMap<State> = {\n};\n\nexport function localStorageSyncReducer(reducer: ActionReducer<any>): ActionReducer<any> {\n  return localStorageSync({keys: Object.values(features), rehydrate: true })(reducer);\n}\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [localStorageSyncReducer] : [localStorageSyncReducer];\n","// File contains all the app constants\nexport const constants = {\n  // Images constants\n  images: {\n    diary: 'assets/images/diary.png'\n  },\n  // Toast heading types\n  toast: {\n    types: {\n      successToast: 'Success',\n      infoToast: 'Info',\n      errorToast: 'Error',\n    },\n    config: {\n      timeOut: 5000, // 5 seconds\n      extendedTimeOut: 5000, // 5 seconds\n      tapToDismiss: false,\n      closeButton: true,\n      maxOpened: 3,\n      autoDismiss: true,\n    },\n  },\n};\n","export const features = {\n  notes: 'notes'\n};\n\n","import { Component } from '@angular/core';\nimport { NavbarModel } from './modules/shared/components/models/navbar.model';\nimport { appRoutes } from './config/app-routes.constants';\n\n/**\n * Main App Container component\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  links: NavbarModel[] = [\n    {\n      label: 'Add Note',\n      link: `${appRoutes.diary.root}/${appRoutes.diary.note}`,\n      activeClass: 'active'\n    },\n    {\n      label: 'History',\n      link: `${appRoutes.diary.root}/${appRoutes.diary.history}`,\n      activeClass: 'active'\n    }\n  ];\n}\n","<app-navbar [links]=\"links\"></app-navbar>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './modules/shared/components/navbar/navbar.component';\n\nimport { PreloadSelectedModules } from './strategies/preload-selected-modules.strategy';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { environment } from '../environments/environment';\nimport { constants } from './config/app.constants';\nimport { metaReducers, reducers } from './reducers';\n\n\n/**\n * Main app module\n */\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    StoreModule.forRoot(reducers, { metaReducers }),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\n    ToastrModule.forRoot(\n      constants.toast.config\n    ),\n  ],\n  providers: [\n    PreloadSelectedModules,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { PreloadingStrategy, Route } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n/**\n * Strategy to preload modules\n */\nexport class PreloadSelectedModules implements PreloadingStrategy {\n  preload(route: Route, load: any): Observable<any> {\n    return route.data && route.data.preload ? load() : of(null);\n  }\n}\n\n","import { Component, Input, OnInit } from '@angular/core';\nimport { constants } from '../../../../config/app.constants';\nimport { NavbarModel } from '../models/navbar.model';\n\n/**\n * Shared reusable navbar component\n */\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n  constants  = constants;\n  @Input() links: NavbarModel[] = [];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section id=\"app-navbar\">\n  <nav class=\"navbar navbar-expand-lg navbar-dark primary-color\">\n    \n    <a class=\"navbar-brand\" href=\"#\">\n      <img class=\"diary\" loading=\"lazy\" src=\"{{constants.images.diary}}\">\n    </a>\n    \n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    \n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav\">\n        <li *ngFor=\"let link of links\" class=\"nav-item\">\n          <a class=\"nav-link\" [routerLink]=\"[link.link]\" routerLinkActive=\"{{link.activeClass}}\">{{link.label}} <span class=\"sr-only\">(current)</span></a>\n        </li>\n      </ul>\n    </div>\n    \n  </nav>\n</section>\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { appRoutes } from './config/app-routes.constants';\nimport { PreloadSelectedModules } from './strategies/preload-selected-modules.strategy';\n\nconst routes: Routes = [\n  { // Redirect '' to public route\n    path: '',\n    pathMatch: 'full',\n    redirectTo: appRoutes.diary.root,\n    data : {\n      preload: false\n    }\n  },\n  { // Go to diary route\n    path: appRoutes.diary.root,\n    data: {\n      preload: true\n    },\n    loadChildren: () => import('./modules/diary/diary.module').then(m => m.DiaryModule)\n  },\n  { // Redirect in case of wildcards / undefined routes\n    path: '**',\n    redirectTo: appRoutes.diary.root\n  }\n];\n\n/**\n * Main app routing modules\n */\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadSelectedModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}